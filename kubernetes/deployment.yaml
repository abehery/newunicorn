kind: Service
apiVersion: v1
metadata:
  name:  postgres
spec:
  selector:
    app: newunicorn
    type: postgres
  type:   ClusterIP 
  ports:
  - name:  db-port
    port:  5432
    targetPort:  5432
---
kind: Service
apiVersion: v1
metadata:
  name:  redis
spec:
  selector:
    app: newunicorn
    type: redis
  type:   ClusterIP 
  ports:
  - name:  db-port
    port:  6379
    targetPort:  6379
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: drkiq-postgres
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: drkiqenv
  labels:
    app: newunicorn
data:
  WORKER_PROCESSES: my-value
  LISTEN_ON: 0.0.0.0:8000
  DATABASE_URL: postgresql://drkiq:yourpassword@postgres:5432/drkiq?encoding=utf8&pool=5&timeout=5000
  CACHE_URL: redis://redis:6379/0
  JOB_WORKER_URL: redis://redis:6379/0

---
apiVersion: v1
kind: Secret
metadata:
  name:  token
data:
   SECRET_TOKEN: YXNlY3VyZXRva2Vud291bGRub3JtYWxseWdvaGVyZQo=
type: Opaque
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: drkiq-redis
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
--- 


apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: newunicorn
        type: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:9.4.5
        volumeMounts:
        - mountPath: /var/lib/redis/data
          name: drkiq-postgres-data
        env:
          - name: POSTGRES_USER
            value: drkiq
          - name: POSTGRES_PASSWORD
            value: yourpassword
      volumes:
        - name: drkiq-postgres-data
          persistentVolumeClaim:
            claimName: drkiq-postgres
             
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: newunicorn
        type: redis
    spec:
      containers:
      - name: redis
        image: redis:3.0.5
        volumeMounts:
        - mountPath: /var/lib/redis/data
          name: drkiq-redis-data
      volumes:
        - name: drkiq-redis-data
          persistentVolumeClaim:
            claimName: drkiq-redis